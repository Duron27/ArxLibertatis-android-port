From 15a250eee7a6238d4a603339d1f64b565e33717d Mon Sep 17 00:00:00 2001
From: sisah <jirielbunda@seznam.cz>
Date: Tue, 12 Mar 2024 15:17:08 -0400
Subject: [PATCH] shadows shaders

---
 components/sceneutil/mwshadowtechnique.cpp     |  4 ++--
 .../compatibility/shadows_fragment.glsl        | 18 ++++++++++++++----
 2 files changed, 16 insertions(+), 6 deletions(-)

diff --git a/components/sceneutil/mwshadowtechnique.cpp b/components/sceneutil/mwshadowtechnique.cpp
index 06930ebe595..7ee6d636885 100644
--- a/components/sceneutil/mwshadowtechnique.cpp
+++ b/components/sceneutil/mwshadowtechnique.cpp
@@ -554,8 +554,8 @@ MWShadowTechnique::ShadowData::ShadowData(MWShadowTechnique::ViewDependentData*
         _texture->setShadowTextureMode(osg::Texture2D::LUMINANCE);
     }

-    _texture->setFilter(osg::Texture2D::MIN_FILTER,osg::Texture2D::LINEAR);
-    _texture->setFilter(osg::Texture2D::MAG_FILTER,osg::Texture2D::LINEAR);
+    _texture->setFilter(osg::Texture2D::MIN_FILTER,osg::Texture2D::NEAREST);
+    _texture->setFilter(osg::Texture2D::MAG_FILTER,osg::Texture2D::NEAREST);

     // the shadow comparison should fail if object is outside the texture
     _texture->setWrap(osg::Texture2D::WRAP_S,osg::Texture2D::CLAMP_TO_BORDER);
diff --git a/files/shaders/compatibility/shadows_fragment.glsl b/files/shaders/compatibility/shadows_fragment.glsl
index 2945edff3dc..768b961a36f 100755
--- a/files/shaders/compatibility/shadows_fragment.glsl
+++ b/files/shaders/compatibility/shadows_fragment.glsl
@@ -4,7 +4,7 @@
     uniform float maximumShadowMapDistance;
     uniform float shadowFadeStart;
     @foreach shadow_texture_unit_index @shadow_texture_unit_list
-        uniform sampler2DShadow shadowTexture@shadow_texture_unit_index;
+        uniform sampler2D shadowTexture@shadow_texture_unit_index;
         varying vec4 shadowSpaceCoords@shadow_texture_unit_index;

 #if @perspectiveShadowMaps
@@ -33,7 +33,12 @@ float unshadowedLightRatio(float distance)
 #endif
                 if (all(lessThan(shadowXYZ.xy, vec2(1.0, 1.0))) && all(greaterThan(shadowXYZ.xy, vec2(0.0, 0.0))))
                 {
-                    shadowing = min(shadow2DProj(shadowTexture@shadow_texture_unit_index, shadowSpaceCoords@shadow_texture_unit_index).r, shadowing);
+                    vec3 shadowCoordsProj = shadowSpaceCoords@shadow_texture_unit_index.xyz / shadowSpaceCoords@shadow_texture_unit_index.w;
+                    float shadowDistance = texture2D(shadowTexture@shadow_texture_unit_index, shadowCoordsProj.xy).r;
+                    if (shadowDistance <= shadowCoordsProj.z)
+                        shadowing = 0.0;
+                    else
+                        shadowing = 1.0;

                     doneShadows = all(lessThan(shadowXYZ, vec3(0.95, 0.95, 1.0))) && all(greaterThan(shadowXYZ, vec3(0.05, 0.05, 0.0)));
 #if @perspectiveShadowMaps
@@ -44,7 +49,12 @@ float unshadowedLightRatio(float distance)
         @endforeach
     #else
         @foreach shadow_texture_unit_index @shadow_texture_unit_list
-            shadowing = min(shadow2DProj(shadowTexture@shadow_texture_unit_index, shadowSpaceCoords@shadow_texture_unit_index).r, shadowing);
+            vec3 shadowCoordsProj = shadowSpaceCoords@shadow_texture_unit_index.xyz / shadowSpaceCoords@shadow_texture_unit_index.w;
+            float shadowDistance = texture2D(shadowTexture@shadow_texture_unit_index, shadowCoordsProj.xy).r;
+            if (shadowDistance <= shadowCoordsProj.z)
+                shadowing = 0.0;
+            else
+                shadowing = 1.0;
         @endforeach
     #endif
 #if @limitShadowMapDistance
@@ -84,4 +94,4 @@ void applyShadowDebugOverlay()
         }
     @endforeach
 #endif // SHADOWS
-}
\ No newline at end of file
+}
diff --git a/files/shaders/compatibility/shadowcasting.vert b/files/shaders/compatibility/shadowcasting.vert
index c68bdd5c177..90882c09797 100755
--- a/files/shaders/compatibility/shadowcasting.vert
+++ b/files/shaders/compatibility/shadowcasting.vert
@@ -6,8 +6,8 @@ varying float alphaPassthrough;

 uniform int colorMode;
 uniform bool useTreeAnim;
-uniform bool useDiffuseMapForShadowAlpha = true;
-uniform bool alphaTestShadows = true;
+uniform bool useDiffuseMapForShadowAlpha;// = true;
+uniform bool alphaTestShadows;// = true;

 void main(void)
 {
